{"name":"Pyscape","tagline":"A script to grab data from the Mozscape API. Uses Python 3.","body":"## Getting started\r\n\r\nTo use Pyscape you will need:\r\n\r\n1. A Python installation &ge; 3.2.\r\n2. A set of [Mozscape API \r\n   credentials](http://apiwiki.seomoz.org/create-and-manage-your-account), \r\n   free or paid. It's a phenomenal service they offer, so \r\n   I recommend you try it out if you aren't familiar.\r\n\r\nPut your keys in a file called `keys.json` in the same directory \r\nas the script. The structure of this file should be:\r\n\r\n```\r\n{\r\n    \"access-id\": \"your-id-here\",\r\n    \"secret-key\": \"your-key-here\"\r\n}\r\n```\r\n\r\n## Usage\r\n\r\n\r\n```\r\nusage: pyscape [-h] [-d | -s | -p] [-o | -m | -f | -t] [-j | -c]\r\n               {metrics,bulk-metrics,anchor,top,links} source dest\r\n\r\nInterface with the Mozscape API to provide link metrics\r\n\r\npositional arguments:\r\n  {metrics,bulk-metrics,anchor,top,links}\r\n                        select operating mode\r\n  source                specify a URL or text file as appropriate\r\n  dest                  specify an output file\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -d, --domain-mode     interpret input URL(s) as domains only\r\n  -s, --subdomain-mode  interpret input URL(s) as subdomains only\r\n  -p, --page-mode       interpret input URL(s) as individual pages; default\r\n  -o, --one-page        in link mode, return one page per linking domain\r\n  -m, --many-pages      in link mode, return many pages per linking domain;\r\n                        default\r\n  -f, --phrase          in anchor mode, return phrase matches\r\n  -t, --term            in anchor mode, return term matches; default\r\n  -j, --json            write data in JSON format\r\n  -c, --csv             write data in CSV format; default\r\n```\r\n\r\n### Examples\r\n\r\n```bash\r\n./pyscape links www.example.com links.csv -d -m\r\n# export a CSV with all available links to example.com\r\n```\r\n\r\n## OSE-style reports\r\n\r\nOften use of the Mozscape API is an extension of working with \r\n[Open Site Explorer](http://www.opensiteexplorer.org/). When then \r\n10,000 lines it provides are insufficient, we can use the command \r\nline to extend the amount of information available. Or, if we're \r\njust trying to pull a lot of reports it will be more convenient to \r\nuse a command line tool.\r\n\r\n## Thanks\r\n\r\nThe [SEOmoz team](http://www.seomoz.org/about/team) deserves a lot \r\nof credit for their work on creating a useful tool. If you're \r\na dev looking for a great place to work, [check them \r\nout](http://www.seomoz.org/about/jobs). And tell them I sent you!\r\n\r\nAlso, preparing all of the data required to set up intelligent \r\ndefaults and provide human-readable output would have been \r\nimpossible without http://jsoneditoronline.com. It's bitchin'.\r\n","google":"UA-40504010-1","note":"Don't delete this file! It's used internally to help with page regeneration."}